
notes sur la tentative d'activation du mode south

idée : en profiter pour passer en 0.6 parce que on commence à bien changer ?

 => debian/postinst avec migration vers south (etape 1, faite une seule fois
    quand on vient d'une version <= 0.5.13) puis migration south elle-même (tentée
    à chaque upgrade)

    note : migration faite en tant que root... voir s'il n'est pas possible
    de faire ça avec un peu moins de droit (un setuid/gid nobody/auf-d-u par
    exemple...)

MAIS /!\  si on veut que les choses se passent bien lors du upgrade, il 
faut être prudent :

 => pour que south puisse faire son travail, il faut que l'utilisateur MySQL
    puisse modifier le schéma de la base...  pas supra génial, mais après
    tout... on n'a rien sans rien, comme disent les grand-mères, voilà c'est ça.

    ==> programmer un script qui détecte si la base est bien en MySQL,
    qu'elle a déjà été créée, et que l'utilisateur a les droits nécessaires
    à la gestion automatique dessus... idée : SHOW GRANTS + regex ?
    ==> de façon annexe, et pour aider, proposer un script qui créée
    la base et des utilisateurs dessus (admin, nssread, nssroot)

 => ajout python-django-south dans les Depends
 => ajout "south" dans les INSTALLED_APPS de settings.py


postinst :

* update depuis non-south :
   syncdb --noinput
   migrate --all 0001_initial --fake  # on se pose sur le 0001 (dernier non-south)
   migrate                            # et on migre vers la last version
   
* install vierge => à la main = 
     syncdb
     migrate (plante avec sqlite3, mais ok : faire un migrate --fake ensuite)

* update depuis south :  A TESTER => faire une modif+startmigration
   migrate    ... mmh c'est tout, non ?

